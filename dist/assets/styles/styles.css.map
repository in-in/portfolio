{"version":3,"sources":["helpers/app-reset.css","../blocks/box/box.css","../blocks/container/container.css","../blocks/footer/footer.css","../blocks/header/header.css","../blocks/logo/logo.css","../blocks/menu/menu.css","../blocks/section/section.css"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["/*\nApp reset by Ben Frain @benfrain / benfrain.com\n\nLatest: https://github.com/benfrain/app-reset\n\nAn opinionated set of resets suitable for building web applications.\n\n## Accessibility Notes\nThese resets target HTML elements that typically receive styling defaults by User Agents that I always need to 'undo'.\n\nBe aware that some of these resets have a negative impact on the default usability and accessibility of a web page. Therefore, ensure you add an equivalent accessible style back that matches your project aesthetic.\n\n## You'll want to run this through Autoprefixer You'll typically need to run this through (https://github.com/postcss/autoprefixer) for production. Only essential prefixes are added here (e.g. proprietary property value/pairs) and you'll need to set prefixing relative to your desired browser support matrix.\n\n*/\n\n/*Hat tip to @thierrykoblentz for this approach: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */\nhtml {\n    box-sizing: border-box;\n}\n\n/*Yes, the universal selector. No, it isn't slow: https://benfrain.com/css-performance-revisited-selectors-bloat-expensive-styles/*/\n* {\n    /*This prevents users being able to select text. Stops long presses in iOS bringing up copy/paste UI for example*/\n    user-select: none;\n    /*This gets -webkit specific prefix as it is a non W3C property*/\n    -webkit-tap-highlight-color: rgba(255,255,255,0);\n    /*Older Androids need this instead*/\n    -webkit-tap-highlight-color: transparent;\n    /* Most devs find border-box easier to reason about. However by inheriting we can mix box-sizing approaches.*/\n    box-sizing: inherit;\n}\n\n*:before,\n*:after {\n    box-sizing: inherit;\n}\n\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np {\n    /*We will be adding our own margin to these elements as needed.*/\n    margin: 0;\n    /*You'll want to set font-size as needed.*/\n    font-size: 1rem;\n    /*No bold for h tags unless you want it*/\n    font-weight: 400;\n}\n\na {\n    text-decoration: none;\n    color: inherit;\n}\n\n/*No bold for b tags by default*/\nb {\n    font-weight: 400;\n}\n\n/*Prevent these elements having italics by default*/\nem,\ni {\n    font-style: normal;\n}\n\n/*Mozilla adds a dotted outline around a tags when they receive tab focus. This removes it. Be aware this is a backwards accessibilty step!*/\na:focus {\n    outline: 0;\n}\n\n/*You may want to comment this one out. I'd rather have all divs default to flex for apps but that might not work for you*/\ndiv {\n    display: flex;\n}\n\n/*As the rule above, I like all spans and a tags to default to inline-flex. Your mileage may vary*/\nspan,\na {\n    display: inline-flex;\n}\n\ninput,\nfieldset {\n    appearance: none;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    /*inputs and fieldset defaults to having a min-width equal to its content in Chrome and Firefox (https://code.google.com/p/chromium/issues/detail?id=560762), we may not want that*/\n    min-width: 0;\n    /*Reset the font size and family*/\n    font-size: 1rem;\n    font-family: inherit;\n}\n\n/*This switches the default outline off when an input receives focus (really important for users tabbing through with a keyboard) so ensure you put something decent in for your input focus instead!!*/\ninput:focus {\n    outline: 0;\n}\n\ninput[type=\"number\"] {\n    /*Mozilla shows the spinner UI on number inputs unless we use this:*/\n    -moz-appearance: textfield;\n}\n\n/*Removes the little spinner controls for number type inputs (WebKit browsers/forks only)*/\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n    appearance: none;\n}\n\n/*SVG defaults to inline display which I dislike*/\nsvg {\n    display: inline-flex;\n}\n\nimg {\n    /*Make images behave responsively. Here they will scale up to 100% of their natural size*/\n    max-width: 100%;\n    /*Make images display as a block (UA default is usually inline)*/\n    display: block;\n}\n",".box {\n  background-color: purple;\n  display: flex;\n  border-radius: .5rem;\n  outline: inherit;\n}\n",".container\n{\n  min-width: 320px;\n  max-width: 1440px;\n}\n",".footer {\n  \n}\n",".header\n{\n  display: flex;\n  width: 100%;\n  height: 3.125rem;\n}\n\n.header__logo\n{\n  flex-grow: 0;\n}\n\n.header__menu\n{\n  flex-grow: 1;\n}\n",".logo\n{\n  width: 50px;\n  height: 50px;\n\n  fill: var(--mainBlack);\n}\n",".menu\n{\n  display: flex;\n  width: 100%;\n}\n\n.menu__item\n{\n  lost-column: 1/4 0 0;\n\n  justify-content: center;\n  align-items: flex-end;\n  padding-bottom: .75rem;\n}\n\n.menu__icon\n{\n  width: 1.563em;\n  fill: var(--mainBlack);\n}\n\n.menu__item:hover .menu__icon\n{\n  /*fill: red;*/\n  animation-name: bounceIn;\n  animation-duration: 2s;\n  /*animation-delay: .2s;*/\n  /*animation-iteration-count: infinite;*/\n}\n\n@keyframes bounceIn\n{\n  from,\n  20%,\n  40%,\n  60%,\n  80%,\n  to\n  {\n    animation-timing-function: cubic-bezier(.215, .610, .355, 1.000);\n  }\n\n  0%\n  {\n    transform: scale3d(.3, .3, .3);\n    opacity: 0;\n  }\n\n  20%\n  {\n    transform: scale3d(1.1, 1.1, 1.1);\n  }\n\n  40%\n  {\n    transform: scale3d(.9, .9, .9);\n  }\n\n  60%\n  {\n    transform: scale3d(1.03, 1.03, 1.03);\n    opacity: 1;\n  }\n\n  80%\n  {\n    transform: scale3d(.97, .97, .97);\n  }\n\n  to\n  {\n    transform: scale3d(1, 1, 1);\n    opacity: 1;\n  }\n}\n\n.bounceIn\n{\n  animation-name: bounceIn;\n}\n",".r\n{\n  font-family: 'Roboto', sans-serif;\n  font-weight: 500;\n  font-style: normal;\n  font-size: 25px;\n}\n\n.rc\n{\n  font-family: 'Roboto Condensed', sans-serif;\n  font-weight: 300;\n  font-style: italic;\n  font-size: 67px;\n}\n"],"sourceRoot":"/source/"}