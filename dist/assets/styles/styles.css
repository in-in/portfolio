/* imports */

/*
App reset by Ben Frain @benfrain / benfrain.com

Latest: https://github.com/benfrain/app-reset

An opinionated set of resets suitable for building web applications.

## Accessibility Notes
These resets target HTML elements that typically receive styling defaults by User Agents that I always need to 'undo'.

Be aware that some of these resets have a negative impact on the default usability and accessibility of a web page. Therefore, ensure you add an equivalent accessible style back that matches your project aesthetic.

## You'll want to run this through Autoprefixer You'll typically need to run this through (https://github.com/postcss/autoprefixer) for production. Only essential prefixes are added here (e.g. proprietary property value/pairs) and you'll need to set prefixing relative to your desired browser support matrix.

*/

/*Hat tip to @thierrykoblentz for this approach: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
html {
    box-sizing: border-box;
}

/*Yes, the universal selector. No, it isn't slow: https://benfrain.com/css-performance-revisited-selectors-bloat-expensive-styles/*/
* {
    /*This prevents users being able to select text. Stops long presses in iOS bringing up copy/paste UI for example*/
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    /*This gets -webkit specific prefix as it is a non W3C property*/
    -webkit-tap-highlight-color: rgba(255,255,255,0);
    /*Older Androids need this instead*/
    -webkit-tap-highlight-color: transparent;
    /* Most devs find border-box easier to reason about. However by inheriting we can mix box-sizing approaches.*/
    box-sizing: inherit;
}

*:before,
*:after {
    box-sizing: inherit;
}

body,
h1,
h2,
h3,
h4,
h5,
h6,
p {
    /*We will be adding our own margin to these elements as needed.*/
    margin: 0;
    /*You'll want to set font-size as needed.*/
    font-size: 16px;
    font-size: 1rem;
    /*No bold for h tags unless you want it*/
    font-weight: 400;
}

a {
    text-decoration: none;
    color: inherit;
}

/*No bold for b tags by default*/
b {
    font-weight: 400;
}

/*Prevent these elements having italics by default*/
em,
i {
    font-style: normal;
}

/*Mozilla adds a dotted outline around a tags when they receive tab focus. This removes it. Be aware this is a backwards accessibilty step!*/
a:focus {
    outline: 0;
}

/*You may want to comment this one out. I'd rather have all divs default to flex for apps but that might not work for you*/
div {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: -webkit-box;
    display: flex;
}

/*As the rule above, I like all spans and a tags to default to inline-flex. Your mileage may vary*/
span,
a {
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: -webkit-inline-box;
    display: inline-flex;
}

input,
fieldset {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border: 0;
    padding: 0;
    margin: 0;
    /*inputs and fieldset defaults to having a min-width equal to its content in Chrome and Firefox (https://code.google.com/p/chromium/issues/detail?id=560762), we may not want that*/
    min-width: 0;
    /*Reset the font size and family*/
    font-size: 16px;
    font-size: 1rem;
    font-family: inherit;
}

/*This switches the default outline off when an input receives focus (really important for users tabbing through with a keyboard) so ensure you put something decent in for your input focus instead!!*/
input:focus {
    outline: 0;
}

input[type="number"] {
    /*Mozilla shows the spinner UI on number inputs unless we use this:*/
    -moz-appearance: textfield;
}

/*Removes the little spinner controls for number type inputs (WebKit browsers/forks only)*/
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
            appearance: none;
}

/*SVG defaults to inline display which I dislike*/
svg {
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: -webkit-inline-box;
    display: inline-flex;
}

img {
    /*Make images behave responsively. Here they will scale up to 100% of their natural size*/
    max-width: 100%;
    /*Make images display as a block (UA default is usually inline)*/
    display: block;
}
.box {
  background-color: purple;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: -webkit-box;
  display: flex;
  border-radius: .5rem;
  outline: inherit;
}
.container
{
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  min-width: 320px;
  min-width: 20rem;
  max-width: 1440px;
  max-width: 90rem;
}
.footer {
  
}
.header
{
  display: -webkit-flex;
  display: -ms-flexbox;
  display: -webkit-box;
  display: flex;
  width: 100%;
  height: 50px;
  height: 3.125rem;
}

.header__logo
{
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
}

.header__menu
{
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
}
.heading
{
  color: #222;
  font-family: 'Roboto Condensed', sans-serif;
  /*font-size: 1.618rem;*/
  font-size: calc(1.618rem + 5.236 * ((100vw - 20rem) / 70));
  font-weight: 400;
  font-style: italic;
  font-size: calc(1.618rem + 5.236 * ((100vw - 20rem) / 70));
  font-size: calc(1.618rem + 5.236 * ((100vw - 20rem) / 70));
}
@media screen and (min-width: 90rem) {
    .heading {
        font-size: 6.854rem;
    }
}
@media screen and (max-width: 20rem) {
    .heading {
        font-size: 1.618rem;
    }
}
@media screen and (min-width: 90rem) {
    .heading {
        font-size: 6.854rem;
    }
}
@media screen and (max-width: 20rem) {
    .heading {
        font-size: 1.618rem;
    }
}
@media screen and (min-width: 90rem) {
    .heading {
        font-size: 6.854rem;
    }
}
@media screen and (max-width: 20rem) {
    .heading {
        font-size: 1.618rem;
    }
}
.home
{
  background-image: -webkit-linear-gradient(right, #4b1248, #f0c27b);
  background-image: linear-gradient(to left, #4b1248, #f0c27b);
}

/* 4b1248 80 */

/* f0c27b ff */

.home__heading
{
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
      flex: 0 0 auto;
  width: 50%;
}

.home__heading:nth-child(n) {
    margin-right: 0;
}

.home__heading:last-child {
    margin-right: 0;
}

.home__heading:nth-child(0n) {
    margin-right: 0;
}

.home__lion
{
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
      flex: 0 0 auto;
  width: 50%;
}

.home__lion:nth-child(n) {
    margin-right: 0;
}

.home__lion:last-child {
    margin-right: 0;
}

.home__lion:nth-child(0n) {
    margin-right: 0;
}

.lion
{
  width: 130px;
}
.logo
{
  width: 50px;
  height: 50px;

  fill: #222;
}
.menu
{
  display: -webkit-flex;
  display: -ms-flexbox;
  display: -webkit-box;
  display: flex;
  width: 100%;
}

.menu__item
{
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
      flex: 0 0 auto;
  width: 25%;

  -webkit-justify-content: center;

  -ms-flex-pack: center;

      justify-content: center;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
      align-items: flex-end;
  padding-bottom: 12px;
  padding-bottom: .75rem;
}

.menu__item:nth-child(n) {
    margin-right: 0;
}

.menu__item:last-child {
    margin-right: 0;
}

.menu__item:nth-child(0n) {
    margin-right: 0;
}

.menu__icon
{
  width: 1.563em;
  transition: -webkit-transform .2s ease-in;
  transition: transform .2s ease-in;
  transition: transform .2s ease-in, -webkit-transform .2s ease-in;
  fill: #222;
}

.menu__icon:hover
{
  -webkit-transform: scale(1.1);
          transform: scale(1.1);
}

.menu__icon:active
{
  -webkit-transform: scale(.8);
          transform: scale(.8);
}
.section
{
  /*width: 100%;*/
}

body
{
  font-size: 16px;
}

/*# sourceMappingURL=styles.css.map */
